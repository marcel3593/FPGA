ucliGUI::start /home/verifier/myproj/sv_test2_program/tb1.simv -ucligui -l run.log
set ucliGUI::state
set ucliGUI::state
ucliCore::getToolPID
synopsys::env hasTB
trigger_hier_stack_context_switch 0
synopsys::xml set_array_limit <data limit="50" />
synopsys::xml set_depth_limit <data limit="100" />
synopsys::xml set_string_limit <data limit="1000" />
synopsys::xml set_only_active_frame <data value="1" />
synopsys::xml set_variable_frame_id <data value="1" />
synUtils::setDVEInitPhase 1
synopsys::dump -type VPD -file /home/verifier/myproj/sv_test2_program/inter.vpd -locking
synopsys::dump -autoflush on -fid VPD1
set ::dve_fid VPD1
synUtils::setDVEInitPhase 0
ucliCore::getToolPID
synUtils::sendTool -active _icl_setToolSocket /tmp/smlnpN3I68v
synUtils::sendTool -active {_icl_start_rpc -version "O-2018.09-SP2_Full64" -sync_file /tmp/vcs_dve_rpc.verifier.108356}
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.verifier.108356}
config endofsim noexit
config onfail enable all
config syscaddplainmembers
config syscaddsourcenames
config syscaddstructtypes
synopsys::listing -disable
# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Sun Jan 1 20:13:33 2023
# Designs open: 1
#   Sim: /home/verifier/myproj/sv_test2_program/tb1.simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: simple_pkg.\sample::read_monitor_1
#   Wave.1: 25 signals
#   Group count = 7
#   Group Group1 signal count = 7
#   Group Group2 signal count = 7
#   Group drv_ck signal count = 2
#   Group mon_ck signal count = 2
#   Group drv_ck_1 signal count = 2
#   Group mon_ck_1 signal count = 2
#   Group dut_1 signal count = 10
# End_DVE_Session_Save_Info
# DVE version: O-2018.09-SP2_Full64
# DVE build date: Feb 28 2019 23:39:41
#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">
# Application preferences
#<WindowLayout>
# DVE top-level session
# Create and position top-level window: TopLevel.1
set TopLevel.1 TopLevel.1
# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set Stack.1 Stack.1
set Class.1 Class.1
set Object.1 Object.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Local.1 Local.1
set Member.1 Member.1
set Console.1 Console.1
# MDI window settings
set Source.1 Source.1
# End MDI window settings
# Create and position top-level window: TopLevel.2
set TopLevel.2 TopLevel.2
# Docked window settings
# MDI window settings
set Wave.1 Wave.1
# End MDI window settings
#</WindowLayout>
#<Database>
#</Database>
# DVE Global setting session:
# Global: Breakpoints
# Global: Bus
# Global: Expressions
# Global: Signal Time Shift
# Global: Signal Compare
# Global: Signal Groups
synopsys::dump -add {tb1.rd_if tb1.wr_if } -aggregates  -fid VPD1
synopsys::dump -add {tb1.rd_if.mon_ck} -scope "." -depth 1 -fid VPD1
synopsys::dump -add {tb1.dut_1} -scope "." -depth 1 -fid VPD1
synopsys::dump -add {tb1} -scope "." -depth 1 -fid VPD1
synopsys::dump -add {tb1.rd_if.drv_ck} -scope "." -depth 1 -fid VPD1
set _session_group_1 Group1
set Group1 "$_session_group_1"
set _session_group_2 Group2
set Group2 "$_session_group_2"
set _session_group_3 drv_ck
set drv_ck "$_session_group_3"
set _session_group_4 mon_ck
set mon_ck "$_session_group_4"
set _session_group_5 drv_ck_1
set drv_ck_1 "$_session_group_5"
set _session_group_6 mon_ck_1
set mon_ck_1 "$_session_group_6"
set _session_group_7 dut_1
set dut_1 "$_session_group_7"
# Global: Highlighting
# Global: Stack
# Post database loading setting...
# Save global setting...
# Wave/List view global setting
# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {     if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {         gui_close_window -window $__top     } }
# DVE View/pane content session:
# Hier 'Hier.1'
catch {gui_list_expand -id ${Hier.1} tb1}
catch {gui_list_select -id ${Hier.1} {tb1.dut_1}}
# Class 'Class.1'
# Member 'Member.1'
# Data 'Data.1'
# Source 'Source.1'
# Warning: Class view not found.
# View 'Wave.1'
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
set origGroupCreationState [gui_list_create_group_when_add -wave]
synopsys::dump -add {tb1.dut_1.mem } -aggregates  -fid VPD1
if {$origGroupCreationState} { 	gui_list_create_group_when_add -wave -enable }
if { $groupExD } {  gui_msg_report -code DVWW028 }
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.2}]} { 	gui_set_active_window -window ${TopLevel.2} 	gui_set_active_window -window ${Wave.1} }
if {[gui_exist_window -window ${TopLevel.1}]} { 	gui_set_active_window -window ${TopLevel.1} 	gui_set_active_window -window ${Source.1} 	gui_set_active_window -window ${Console.1} }
#</Session>
trigger_hier_stack_context_switch 0
synopsys::xml {frames <data updateType="preserve" itemId="none" viewId="Stack.1" />}
run
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
set ucliGUI::state
synopsys::xml get_stop_data
synopsys::xml {frames <data updateType="preserve" itemId="none" viewId="Stack.1" />}
synopsys::xml {locals <data updateType="preserve" itemId="none" frame_id="frame(16:1:24)" viewId="Local.1" />}
synopsys::xml {evaluate <data updateType="increment" itemId="121831872" frame_id="frame(16:1:24)" viewId="Hidden 2" > <item separator="." expr="this" open="1" name="this" depth="1" /></data>}
trigger_hier_stack_context_switch 1
if [catch {gui_sim_terminate}] {gui_sim_terminate -kill}
synopsys::finish
set ucliGUI::state
set ucliGUI::state
ucli_exit
